data = data1, weights = weegVO1,
method = "qr")
Peer <- lm(sdqpeer1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
Hyp <- lm(sdqhyp1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
summary(Int0)
summary(Int)
summary(Int2)
summary(Ext)
summary(Ext2)
summary(Tot)
summary(LifeSat)
summary(PsySom)
summary(data$sc_houding_gender)
str(data$hetero)
summary(Int)
summary(Ext)
summary(Peer)
summary(Hyp)
summary(Tot)
str(data$schnivo)
### TODO
# install.packages("corrr")
library(corrr)
library(ggplot2)
### install.packages("corrplot")
library(corrplot)
mcor <- cor(x = data1$sc_houding_gender, y = c(data1$age, data1$schnivo, data1$ ), use="complete.obs")
corrplot(mcor, tl.srt = 25)
names(data1[269:242])
###
Int <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
Ext <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
Int_nomod <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender,
data = data1, weights = weegVO1,
method = "qr")
Ext_nomod <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender,
data = data1, weights = weegVO1,
method = "qr")
Int00 <- lm(sdqem1 ~ v2 + sc_houding_gender + v2*sc_houding_gender,
data = data1, weights = weegVO1,
method = "qr")
summary(Int00)
###
Int <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender,
data = data1, weights = weegVO1,
method = "qr")
Ext <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
### Happiest kids order with support scales:
Int_A <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + v2, data = data1, weights = weegVO1, method = "qr")
Int_B <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender,   data = data1, weights = weegVO1, method = "qr")
Int_C <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender + sc_steun_thuis + sc_steun_vriend + sc_sfeer_klas, data = data1, weights = weegVO1, method = "qr")
summary(Int_A)
summary(Int_B)
summary(Int_C)
Ext_A <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + v2, data = data1, weights = weegVO1, method = "qr")
Ext_B <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender,   data = data1, weights = weegVO1, method = "qr")
Ext_C <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender + sc_steun_thuis + sc_steun_vriend + sc_sfeer_klas, data = data1, weights = weegVO1, method = "qr")
summary(Ext_A)
summary(Ext_B)
summary(Ext_C)
LifeS_A <- lm(v52 ~ etn + age + schnivo + vollgezin + FAS_III + v2, data = data1, weights = weegVO1, method = "qr")
LifeS_B <- lm(v52 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender,   data = data1, weights = weegVO1, method = "qr")
LifeS_C <- lm(v52 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender + sc_steun_thuis + sc_steun_vriend + sc_sfeer_klas, data = data1, weights = weegVO1, method = "qr")
summary(LifeS_A)
summary(LifeS_B)
summary(LifeS_C)
### Happiest kids order with easy communication items scales:
Int_A2 <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + v2, data = data1, weights = weegVO1, method = "qr")
Int_B2 <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender,   data = data1, weights = weegVO1, method = "qr")
Int_C2 <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender + v37_1 + v37_3 + v37_6, data = data1, weights = weegVO1, method = "qr")
summary(Int_A2)
summary(Int_B2)
summary(Int_C2)
Ext_A2 <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + v2, data = data1, weights = weegVO1, method = "qr")
Ext_B2 <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender,   data = data1, weights = weegVO1, method = "qr")
Ext_C2 <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender + v37_1 + v37_3 + v37_6, data = data1, weights = weegVO1, method = "qr")
summary(Ext_A2)
summary(Ext_B2)
summary(Ext_C2)
LifeS_A2 <- lm(v52 ~ etn + age + schnivo + vollgezin + FAS_III + v2, data = data1, weights = weegVO1, method = "qr")
LifeS_B2 <- lm(v52 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender,   data = data1, weights = weegVO1, method = "qr")
LifeS_C2 <- lm(v52 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender + v37_1 + v37_3 + v37_6, data = data1, weights = weegVO1, method = "qr")
summary(LifeS_A2)
summary(LifeS_B2)
summary(LifeS_C2)
plot()
### plots
###
# how to get correlation
data3 <- data1
data3[] <- lapply(data1,as.integer)
# visualize it
library(corrplot)
#png(filename="Corr.png")
# corrplot(cor(data3))
par(mfrow=c(3,2))
hist(data1$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
hist(data1$sdqcon1[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sdqcon1[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
hist(data1$sdqem1[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sdqem1[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
#dev.off()
hist(data1$sc_houding_gender[data1$v2==1])
par(mfrow=c(3,2))
hist(data1$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
hist(data1$sdqcon1[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sdqcon1[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
hist(data1$sdqem1[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sdqem1[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
cor(data1$sc_houding_gender, data1$hetero)
ggplot(data=data1, aes(sc_houding_gender, sdqcon1)) +
geom_point(aes(colour = v2))
par(mfrow = c(1,1))
plot(data1$sc_houding_gender, data1$sdqcon1)
par(mfrow=c(1,2))
hist(data1$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
par(mfrow=c(1,2))
hist(data$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
par(mfrow=c(1,2))
hist(data$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
#dev.off()
hist(data1$sc_houding_gender[data1$v2==1])
hist(data1$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
hist(data$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
hist(data1$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
install.packages("papaja", dep=T)
if(!"tinytex" %in% rownames(installed.packages())) install.packages("tinytex")
tinytex::install_tinytex()
if(!"devtools" %in% rownames(installed.packages())) install.packages("devtools")
devtools::install_github("crsh/papaja")
installed.packages()
install.packages("lavaan", dep=T)
install.packages("psych", dep=T)
install.packages("medmod", dep=T)
install.packages("psych", dep=T)
install.packages(c("emmeans", "QuantPsyc", "mediation", "rockchalk", "multilevel", "bda", "gvlma", "stargazer", dep=T))
lm
install.packages("emmeans", dependencies=TRUE);
install.packages("ggplot2", dependencies=TRUE)
r
R
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
updateR(admin_password = 'Admin user password')
install.packages(as.vector(needed_packages))
> library(blogdown)
library(blogdown)
install.packages("prereg")
library(papaja)
# Install devtools package if necessary
if(!"devtools" %in% rownames(installed.packages())) install.packages("devtools")
# Install the stable development verions from GitHub
devtools::install_github("crsh/papaja")
# Install the latest development snapshot from GitHub
devtools::install_github("crsh/papaja@devel")
library(papaja)
library(prereg)
months <- 500 * 5 * 3
p_month_r <- 4/60
repl_needed <- months * p_month_r
repl_needed <- months * p_month_r; repl_needed
p_month_wc <- 5/60
p_month_bc <- 1 / 60
p_month_r <- 4/60
p_month_bc <- 1 / 60
p_month_wc <- 5/60
repl_needed <- months * p_month_r; repl_needed
repl_needed <- months * p_month_bc; repl_needed
repl_needed <- months * p_month_wc; repl_needed
months <- 500 * 3
# replacements expected
# ricci crashed 4 trackers in 60 months of using trackers
p_month_r <- 4/60
p_month_bc <- 1 / 60
p_month_wc <- 5/60
repl_needed <- months * p_month_r; repl_needed
repl_needed <- months * p_month_bc; repl_needed
repl_needed <- months * p_month_wc; repl_needed
# Gamrin tracker
# total months of us tracker usage
months <- 500 * 3 # only first cohort
# replacements expected
p_month_r <- 4/60 # riccÃ­ broke 4 trackers over 60mo
p_month_bc <- 1/60 # best case?
p_month_wc <- 5/60 # worst case?
repl_needed <- months * p_month_r; repl_needed
repl_needed <- months * p_month_bc; repl_needed
repl_needed <- months * p_month_wc; repl_needed
# total months of tracker usage
months <- 503 * 3 # only first cohort, plus 3 testing trackers
# Gamrin tracker
# total months of tracker usage
months <- 503 * 3 # only first cohort, plus 3 testing trackers
# replacements expected
p_month_r <- 4/60 # riccÃ­ broke 4 trackers over 60mo
p_month_bc <- 1/60 # best case?
p_month_wc <- 5/60 # worst case?
repl_needed <- months * p_month_r; repl_needed #100
repl_needed <- months * p_month_bc; repl_needed #25
repl_needed <- months * p_month_wc; repl_needed #125
# replacements expected
p_month_ricci <- 4/60 # riccÃ­ broke 4 trackers over 60mo
p_month_ricci
# Gamrin tracker
# total months of tracker usage
months <- 503 * 3 # only first cohort, plus 3 testing trackers
# replacements expected
p_month_ricci <- 4/60 # riccÃ­ broke 4 trackers over 60mo
p_month_bc <- 1/60 # best case?
p_month_wc <- 5/60 # worst case?
repl_needed <- months * p_month_r; repl_needed #100
repl_needed <- months * p_month_bc; repl_needed #25
repl_needed <- months * p_month_wc; repl_needed #125
# replacements expected
p_month_ricci <- 3/60 # riccÃ­ broke 4 trackers over 60mo
p_month_wc <- 5/60 # worst case?
repl_needed <- months * p_month_r; repl_needed #100
# Gamrin tracker
# total months of tracker usage
months <- 503 * 3 # only first cohort, plus 3 testing trackers
# replacements expected
p_month_ricci <- 3/60 # riccÃ­ broke 4 trackers over 60mo
p_month_bc <- 1/60 # best case?
p_month_wc <- 5/60 # worst case?
repl_needed <- months * p_month_r; repl_needed #100
repl_needed <- months * p_month_bc; repl_needed #25
repl_needed <- months * p_month_wc; repl_needed #125
# Gamrin tracker
# total months of tracker usage
months <- 503 * 3 # only first cohort, plus 3 testing trackers
# replacements expected
p_month_ricci <- 3/60 # riccÃ­ broke 4 trackers over 60mo
p_month_bc <- 1/60 # best case?
p_month_wc <- 5/60 # worst case?
repl_needed <- months * p_month_r; repl_needed #100
repl_needed <- months * p_month_bc; repl_needed #25
repl_needed <- months * p_month_wc; repl_needed #125
# Gamrin tracker
# total months of tracker usage
months <- 503 * 3 # only first cohort, plus 3 testing trackers
# replacements expected
p_month_ricci <- 3/60 # riccÃ­ broke 4 trackers over 60mo
p_month_bc <- 1/60 # best case?
p_month_wc <- 5/60 # worst case?
repl_needed <- months * p_month_r; repl_needed #100
repl_needed <- months * p_month_bc; repl_needed #25
repl_needed <- months * p_month_wc; repl_needed #125
# Gamrin tracker
# total months of tracker usage
months <- 503 * 3 # only first cohort, plus 3 testing trackers
# replacements expected
p_month_ricci <- 3/60 # riccÃ­ broke 3 tracker displays over 60mo (+3 replaceable bands, we ignore them here)
p_month_bc <- 1/60 # best case?
p_month_wc <- 5/60 # worst case?
repl_needed <- months * p_month_r; repl_needed #100
repl_needed <- months * p_month_bc; repl_needed #25
repl_needed <- months * p_month_wc; repl_needed #125
# Garmin tracker
# total months of tracker usage
months <- 500 * 3 # only first cohort, plus 3 testing trackers
# replacements expected
p_month_ricci <- 3/60 # riccÃ­ broke 3 tracker displays over 60mo (+3 replaceable bands, we ignore them here)
p_month_wc <- 5/60 # worst case?
# Garmin tracker
# total months of tracker usage
months <- 500 * 3 # only first cohort, plus 3 testing trackers
# replacements expected
p_month_ricci <- 3/60 # riccÃ­ broke 3 tracker displays over 60mo (+3 replaceable bands, we ignore them here)
p_month_bc <- 1/60 # best case?
p_month_wc <- 5/60 # worst case?
repl_needed <- months * p_month_r; repl_needed #100
repl_needed <- months * p_month_bc; repl_needed #25
repl_needed <- months * p_month_wc; repl_needed #125
# Sizes:
library(haven)
data_assignment2020 <- read_sav("Dropbox/RMCH/AMDA B/3 Multilevel/data_assignment2020.sav")
View(data_assignment2020)
source('~/Downloads/ExtractPredValue.R')
source('~/.active-rstudio-document', echo=TRUE)
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
str(output)
output <- summary(cars)
str(output)
output <- summary(cars)
summary(cars)
str(output)
mean_speed <- outpu[3,1]
mean_speed <- output[3,1]
summary(cars)
output[3,1]
str(output)
output <- mean(cars)
mean(cars)
output <- summary(cars)
summary(cars)
str(output)
output$1
output$speed
output[ ,1]
cars
str(cars)
str(cars$speed)
mean_speed <- cars$speed)
str(mean_speed)
mean(cars$speed)
str(mean_speed)
mean_speed <- mean(cars$speed)
mod1 = lm(formula = dist ~ speed, data = cars)
summary(mod1)
str(mod1)
# say I want to report coefficient of speed
mod1$coefficients
# say I want to report coefficient of speed
mod1$coefficients
# estimate of effect of speed
mod1$coefficients[2]
# estimate of effect of speed
b_speed <- mod1$coefficients[2]
str(b_speed)
as.numeric(b_speed)
round(b_speed, digits = 2)
round(b_speed_numeric, digits = 2)
b_speed_numeric <- as.numeric(b_speed)
round(b_speed_numeric, digits = 2)
mod1 = lm(formula = dist ~ speed, data = cars)
summary(mod1)
str(mod1) # inspect structure of output object
mod1$coefficients # show only coefficients
# estimate of effect of speed
b_speed <- mod1$coefficients[2] # show only effect of speed
str(b_speed) # still not just the estimate, let's see...
b_speed_numeric <- as.numeric(b_speed) # too many decimals
round(b_speed_numeric, digits = 2) # yay!
str(summary(mod1)) # probably used this
mod1$coefficients[2]
mod1$effects
summary(mod1)
mod1$coefficients
summary(mod1)
mod1$coefficients
str( summary(mod1) )
summary(mod1)$coefficients
summary(mod1)$coefficients[2]
summary(mod1)$coefficients[2, ]
summary(mod1)$coefficients[2, 1]
b_speed <- summary(mod1)$coefficients[2, 1] #3.932409
papaja::printnum(b_speed)
p_speed <- summary(mod1)$coefficients[2, 3]
p_speed
summary(mod1)$coefficients
p_speed <- summary(mod1)$coefficients[2, 4]
papaja::printp(p_speed)
summary(mod1)$coefficients[2, 4]
papaja::apa_print(mod1)
papaja::apa_table( apa_print(lm_out)$table )
papaja::apa_print(lm_out)
lm_out = lm(formula = dist ~ speed, data = cars) # store output
papaja::apa_print(lm_out)
str( papaja::apa_print(lm_out)  )
apa_out <- papaja::apa_print(lm_out)
str( apa_out  )
papaja::apa_table( apa_out$table )
apa_lm <- papaja::apa_print(lm_out)
str( apa_lm )
papaja::apa_table(
apa_lm$table
, caption = "A full regression table."
)
apa_lm <- papaja::apa_print(lm_out)
str( apa_lm )
papaja::apa_table(
apa_lm$table
, caption = "A full regression table."
)
papaja::apa_print(lm_out)
print_lm <- papaja::apa_print(lm_out)
str(print_lm)
print_lm$full_result
print_lm$full_result[2]
print_lm$full_result[[2]]
print_lm$estimate[[2]]
print_lm$statistic[[2]]
papaja::apa_table(
print_lm$table
, caption = "A full regression table."
)
print_lm$estimate[[2]]
# [1] "$b = 3.93$, 95\\% CI $[3.10, 4.77]$"
print_lm$statistic[[2]]
plot(cars, col='blue', pch=20, cex=2, main="Relationship between Speed and Stopping Distance for 50 Cars",
xlab="Speed in mph", ylab="Stopping Distance in feet")
library(papaja)
library(ggplot2)
#create plot to visualize fitted linear regression model
ggplot(data,aes(x, y)) +
geom_point() +
geom_smooth(method='lm')
library(ggplot2)
#  fitted linear regression model
ggplot( cars , aes(x, y)) +
geom_point() +
geom_smooth(method='lm')
library(ggplot2)
#  fitted linear regression model
ggplot( data = cars , aes(x, y)) +
geom_point() +
geom_smooth(method='lm')
library(ggplot2)
#  fitted linear regression model
ggplot( data = cars , aes( speed, dist)) +
geom_point() +
geom_smooth(method='lm')
library(ggplot2)
#  fitted linear regression model
ggplot( data = cars
, aes( speed, dist)) +
geom_point() +
geom_smooth( method='lm') +
labs(
x = "Car speed"
, y = "Stopping distance"
)
library(ggplot2)
#  fitted linear regression model
ggplot( data = cars
, aes( speed, dist)) +
geom_point() +
geom_smooth( method='lm') +
labs(
x = "Car speed"
, y = "Stopping distance"
) +
theme_apa(box = TRUE)
library(ggplot2)
#  fitted linear regression model
theme_set(theme_apa())
ggplot( data = cars
, aes( speed, dist)) +
geom_point() +
geom_smooth( method='lm') +
labs(
x = "Car speed"
, y = "Stopping distance"
)
library(ggplot2)
#  fitted linear regression model
theme_set(theme_apa(box=TRUE))
ggplot( data = cars
, aes( speed, dist)) +
geom_point() +
geom_smooth( method='lm') +
labs(
x = "Car speed"
, y = "Stopping distance"
)
plot(cars$speed, cars$dist)
abline()
plot(cars$speed, cars$dist)
abline(lm(cars$dist ~ cars$speed))
plot(cars$speed, cars$dist,
ylab = "Stopping distance",
xlab = "Car speed")
abline(lm(cars$dist ~ cars$speed))
lm_out = lm(formula = dist ~ speed, data = cars)    # store output
str( summary(lm_out) )                              # inspect structure
b_speed <- summary(lm_out)$coefficients[2, 1]       # 3.932409
papaja::printnum(b_speed)                           # "3.93"
p_speed <- summary(lm_out)$coefficients[2, 4]       # [1] 1.489836e-12
papaja::printp(p_speed)                             # "< .001"
library(ggplot2)
#  fitted linear regression model
theme_set(theme_apa(box=TRUE))
ggplot( data = cars
, aes( speed, dist)) +
geom_point() +
geom_smooth( method='lm') +
labs(
x = "Car speed"
, y = "Stopping distance"
)
papaja::apa_table(
print_lm$table
, caption = "A full regression table."
)
print_lm$table
papaja::apa_table(
print_lm$table
, caption = "A full regression table."
)
# can't demonstrate in slides :)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/Downloads/papaja_RTea/thesis_template")
